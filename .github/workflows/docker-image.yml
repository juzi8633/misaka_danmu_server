# .github/workflows/docker-publish.yml
name: Manual Publish to Docker Hub

# 触发条件：
# 手动触发 (在 GitHub Actions 页面点击 'Run workflow' 按钮)
on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: '要推送的镜像标签 (例如: v1.0.0, latest, test)'
        required: true
        type: string
      make_latest:
        description: '是否同时将此版本标记为 "latest"?'
        required: false
        type: boolean
        default: false

jobs:
  build-and-push:
    # 在最新的 Ubuntu 虚拟机上运行
    runs-on: ubuntu-latest
    steps:
      # 步骤1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 步骤2: 提取 Docker 元数据 (自动生成标签)
      # 使用官方 action 替代手动脚本，更稳定可靠
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/misaka_danmu_server
          tags: |
            # 从手动输入中获取标签
            type=raw,value=${{ inputs.image_tag }}
            # 如果 'make_latest' 为 true，则额外添加 'latest' 标签
            type=raw,value=latest,enable=${{ inputs.make_latest }}

      # 步骤3: 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 步骤4: 登录到 Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 步骤5: 构建并推送 Docker 镜像
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          # 使用上一步生成的标签
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}